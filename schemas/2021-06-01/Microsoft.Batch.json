{
  "id": "https://schema.management.azure.com/schemas/2021-06-01/Microsoft.Batch.json#",
  "$schema": "http://json-schema.org/draft-04/schema#",
  "title": "Microsoft.Batch",
  "description": "Microsoft Batch Resource Types",
  "resourceDefinitions": {
    "batchAccounts": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2021-06-01"
          ]
        },
        "identity": {
          "oneOf": [
            {
              "$ref": "#/definitions/BatchAccountIdentity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The identity of the Batch account, if configured. This is used when the user specifies 'Microsoft.KeyVault' as their Batch account encryption configuration or when `ManagedIdentity` is selected as the auto-storage authentication mode."
        },
        "location": {
          "type": "string",
          "description": "The region in which to create the account."
        },
        "name": {
          "oneOf": [
            {
              "type": "string",
              "pattern": "^[a-zA-Z0-9]+$",
              "minLength": 3,
              "maxLength": 24
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "A name for the Batch account which must be unique within the region. Batch account names must be between 3 and 24 characters in length and must use only numbers and lowercase letters. This name is used as part of the DNS name that is used to access the Batch service in the region in which the account is created. For example: http://accountname.region.batch.azure.com/."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/BatchAccountCreateProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The properties of a Batch account."
        },
        "resources": {
          "type": "array",
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/batchAccounts_applications_childResource"
              },
              {
                "$ref": "#/definitions/batchAccounts_certificates_childResource"
              },
              {
                "$ref": "#/definitions/batchAccounts_pools_childResource"
              }
            ]
          }
        },
        "tags": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The user-specified tags associated with the account."
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.Batch/batchAccounts"
          ]
        }
      },
      "required": [
        "apiVersion",
        "location",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.Batch/batchAccounts"
    },
    "batchAccounts_applications": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2021-06-01"
          ]
        },
        "name": {
          "oneOf": [
            {
              "type": "string",
              "pattern": "^[a-zA-Z0-9_-]+$",
              "minLength": 1,
              "maxLength": 64
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The name of the application. This must be unique within the account."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/ApplicationProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The properties associated with the Application."
        },
        "resources": {
          "type": "array",
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/batchAccounts_applications_versions_childResource"
              }
            ]
          }
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.Batch/batchAccounts/applications"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.Batch/batchAccounts/applications"
    },
    "batchAccounts_applications_versions": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2021-06-01"
          ]
        },
        "name": {
          "oneOf": [
            {
              "type": "string",
              "pattern": "^[a-zA-Z0-9_-][a-zA-Z0-9_.-]*$",
              "minLength": 1,
              "maxLength": 64
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The version of the application."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/ApplicationPackageProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Properties of an application package"
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.Batch/batchAccounts/applications/versions"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.Batch/batchAccounts/applications/versions"
    },
    "batchAccounts_certificates": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2021-06-01"
          ]
        },
        "name": {
          "oneOf": [
            {
              "type": "string",
              "pattern": "^[\\w]+-[\\w]+$",
              "minLength": 5,
              "maxLength": 45
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The identifier for the certificate. This must be made up of algorithm and thumbprint separated by a dash, and must match the certificate data in the request. For example SHA1-a3d1c5."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/CertificateCreateOrUpdateProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Certificate properties for create operations"
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.Batch/batchAccounts/certificates"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.Batch/batchAccounts/certificates"
    },
    "batchAccounts_pools": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2021-06-01"
          ]
        },
        "identity": {
          "oneOf": [
            {
              "$ref": "#/definitions/BatchPoolIdentity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The identity of the Batch pool, if configured. If the pool identity is updated during update an existing pool, only the new vms which are created after the pool shrinks to 0 will have the updated identities"
        },
        "name": {
          "oneOf": [
            {
              "type": "string",
              "pattern": "^[a-zA-Z0-9_-]+$",
              "minLength": 1,
              "maxLength": 64
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The pool name. This must be unique within the account."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/PoolProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Pool properties."
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.Batch/batchAccounts/pools"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.Batch/batchAccounts/pools"
    }
  },
  "definitions": {
    "ApplicationPackageProperties": {
      "type": "object",
      "properties": {},
      "description": "Properties of an application package"
    },
    "ApplicationPackageReference": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID of the application package to install. This must be inside the same batch account as the pool. This can either be a reference to a specific version or the default version if one exists."
        },
        "version": {
          "type": "string",
          "description": "The version of the application to deploy. If omitted, the default version is deployed. If this is omitted, and no default version is specified for this application, the request fails with the error code InvalidApplicationPackageReferences. If you are calling the REST API directly, the HTTP status code is 409."
        }
      },
      "required": [
        "id"
      ],
      "description": "Link to an application package inside the batch account"
    },
    "ApplicationProperties": {
      "type": "object",
      "properties": {
        "allowUpdates": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "A value indicating whether packages within the application may be overwritten using the same version string."
        },
        "defaultVersion": {
          "type": "string",
          "description": "The package to use if a client requests the application but does not specify a version. This property can only be set to the name of an existing package."
        },
        "displayName": {
          "type": "string",
          "description": "The display name for the application."
        }
      },
      "description": "The properties associated with the Application."
    },
    "AutoScaleSettings": {
      "type": "object",
      "properties": {
        "evaluationInterval": {
          "type": "string",
          "format": "duration",
          "description": "The time interval at which to automatically adjust the pool size according to the autoscale formula. If omitted, the default value is 15 minutes (PT15M)."
        },
        "formula": {
          "type": "string",
          "description": "A formula for the desired number of compute nodes in the pool."
        }
      },
      "required": [
        "formula"
      ],
      "description": "AutoScale settings for the pool."
    },
    "AutoStorageBaseProperties": {
      "type": "object",
      "properties": {
        "authenticationMode": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "StorageKeys",
                "BatchAccountManagedIdentity"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The authentication mode which the Batch service will use to manage the auto-storage account."
        },
        "nodeIdentityReference": {
          "oneOf": [
            {
              "$ref": "#/definitions/ComputeNodeIdentityReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The reference to a user assigned identity associated with the Batch pool which a compute node will use."
        },
        "storageAccountId": {
          "type": "string",
          "description": "The resource ID of the storage account to be used for auto-storage account."
        }
      },
      "required": [
        "storageAccountId"
      ],
      "description": "The properties related to the auto-storage account."
    },
    "AutoUserSpecification": {
      "type": "object",
      "properties": {
        "elevationLevel": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "NonAdmin",
                "Admin"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The elevation level of the auto user. The default value is nonAdmin."
        },
        "scope": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Task",
                "Pool"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The scope for the auto user. The default value is Pool. If the pool is running Windows a value of Task should be specified if stricter isolation between tasks is required. For example, if the task mutates the registry in a way which could impact other tasks, or if certificates have been specified on the pool which should not be accessible by normal tasks but should be accessible by start tasks."
        }
      },
      "description": "Specifies the parameters for the auto user that runs a task on the Batch service."
    },
    "AzureBlobFileSystemConfiguration": {
      "type": "object",
      "properties": {
        "accountKey": {
          "type": "string",
          "description": "The Azure Storage Account key. This property is mutually exclusive with both sasKey and identity; exactly one must be specified."
        },
        "accountName": {
          "type": "string",
          "description": "The Azure Storage Account name."
        },
        "blobfuseOptions": {
          "type": "string",
          "description": "Additional command line options to pass to the mount command. These are 'net use' options in Windows and 'mount' options in Linux."
        },
        "containerName": {
          "type": "string",
          "description": "The Azure Blob Storage Container name."
        },
        "identityReference": {
          "oneOf": [
            {
              "$ref": "#/definitions/ComputeNodeIdentityReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The reference to a user assigned identity associated with the Batch pool which a compute node will use."
        },
        "relativeMountPath": {
          "type": "string",
          "description": "The relative path on the compute node where the file system will be mounted. All file systems are mounted relative to the Batch mounts directory, accessible via the AZ_BATCH_NODE_MOUNTS_DIR environment variable."
        },
        "sasKey": {
          "type": "string",
          "description": "The Azure Storage SAS token. This property is mutually exclusive with both accountKey and identity; exactly one must be specified."
        }
      },
      "required": [
        "accountName",
        "containerName",
        "relativeMountPath"
      ],
      "description": "Information used to connect to an Azure Storage Container using Blobfuse."
    },
    "AzureFileShareConfiguration": {
      "type": "object",
      "properties": {
        "accountKey": {
          "type": "string",
          "description": "The Azure Storage account key."
        },
        "accountName": {
          "type": "string",
          "description": "The Azure Storage account name."
        },
        "azureFileUrl": {
          "type": "string",
          "description": "The Azure Files URL. This is of the form 'https://{account}.file.core.windows.net/'."
        },
        "mountOptions": {
          "type": "string",
          "description": "Additional command line options to pass to the mount command. These are 'net use' options in Windows and 'mount' options in Linux."
        },
        "relativeMountPath": {
          "type": "string",
          "description": "The relative path on the compute node where the file system will be mounted. All file systems are mounted relative to the Batch mounts directory, accessible via the AZ_BATCH_NODE_MOUNTS_DIR environment variable."
        }
      },
      "required": [
        "accountKey",
        "accountName",
        "azureFileUrl",
        "relativeMountPath"
      ],
      "description": "Information used to connect to an Azure Fileshare."
    },
    "BatchAccountCreateProperties": {
      "type": "object",
      "properties": {
        "allowedAuthenticationModes": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "SharedKey",
                  "AAD",
                  "TaskAuthenticationToken"
                ]
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "List of allowed authentication modes for the Batch account that can be used to authenticate with the data plane. This does not affect authentication with the control plane."
        },
        "autoStorage": {
          "oneOf": [
            {
              "$ref": "#/definitions/AutoStorageBaseProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The properties related to the auto-storage account."
        },
        "encryption": {
          "oneOf": [
            {
              "$ref": "#/definitions/EncryptionProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Configures how customer data is encrypted inside the Batch account. By default, accounts are encrypted using a Microsoft managed key. For additional control, a customer-managed key can be used instead."
        },
        "keyVaultReference": {
          "oneOf": [
            {
              "$ref": "#/definitions/KeyVaultReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Identifies the Azure key vault associated with a Batch account."
        },
        "poolAllocationMode": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "BatchService",
                "UserSubscription"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The allocation mode to use for creating pools in the Batch account. The pool allocation mode also affects how clients may authenticate to the Batch Service API. If the mode is BatchService, clients may authenticate using access keys or Azure Active Directory. If the mode is UserSubscription, clients must use Azure Active Directory. The default is BatchService."
        },
        "publicNetworkAccess": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Enabled",
                "Disabled"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The network access type for accessing Azure Batch account. If not specified, the default value is 'enabled'."
        }
      },
      "description": "The properties of a Batch account."
    },
    "BatchAccountIdentity": {
      "type": "object",
      "properties": {
        "type": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "SystemAssigned",
                "UserAssigned",
                "None"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The type of identity used for the Batch account."
        },
        "userAssignedIdentities": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/UserAssignedIdentities"
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The list of user identities associated with the Batch account."
        }
      },
      "required": [
        "type"
      ],
      "description": "The identity of the Batch account, if configured. This is used when the user specifies 'Microsoft.KeyVault' as their Batch account encryption configuration or when `ManagedIdentity` is selected as the auto-storage authentication mode."
    },
    "batchAccounts_applications_childResource": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2021-06-01"
          ]
        },
        "name": {
          "oneOf": [
            {
              "type": "string",
              "pattern": "^[a-zA-Z0-9_-]+$",
              "minLength": 1,
              "maxLength": 64
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The name of the application. This must be unique within the account."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/ApplicationProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The properties associated with the Application."
        },
        "type": {
          "type": "string",
          "enum": [
            "applications"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.Batch/batchAccounts/applications"
    },
    "batchAccounts_applications_versions_childResource": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2021-06-01"
          ]
        },
        "name": {
          "oneOf": [
            {
              "type": "string",
              "pattern": "^[a-zA-Z0-9_-][a-zA-Z0-9_.-]*$",
              "minLength": 1,
              "maxLength": 64
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The version of the application."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/ApplicationPackageProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Properties of an application package"
        },
        "type": {
          "type": "string",
          "enum": [
            "versions"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.Batch/batchAccounts/applications/versions"
    },
    "batchAccounts_certificates_childResource": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2021-06-01"
          ]
        },
        "name": {
          "oneOf": [
            {
              "type": "string",
              "pattern": "^[\\w]+-[\\w]+$",
              "minLength": 5,
              "maxLength": 45
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The identifier for the certificate. This must be made up of algorithm and thumbprint separated by a dash, and must match the certificate data in the request. For example SHA1-a3d1c5."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/CertificateCreateOrUpdateProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Certificate properties for create operations"
        },
        "type": {
          "type": "string",
          "enum": [
            "certificates"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.Batch/batchAccounts/certificates"
    },
    "batchAccounts_pools_childResource": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2021-06-01"
          ]
        },
        "identity": {
          "oneOf": [
            {
              "$ref": "#/definitions/BatchPoolIdentity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The identity of the Batch pool, if configured. If the pool identity is updated during update an existing pool, only the new vms which are created after the pool shrinks to 0 will have the updated identities"
        },
        "name": {
          "oneOf": [
            {
              "type": "string",
              "pattern": "^[a-zA-Z0-9_-]+$",
              "minLength": 1,
              "maxLength": 64
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The pool name. This must be unique within the account."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/PoolProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Pool properties."
        },
        "type": {
          "type": "string",
          "enum": [
            "pools"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.Batch/batchAccounts/pools"
    },
    "BatchPoolIdentity": {
      "type": "object",
      "properties": {
        "type": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "UserAssigned",
                "None"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The type of identity used for the Batch Pool."
        },
        "userAssignedIdentities": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/UserAssignedIdentities"
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The list of user identities associated with the Batch pool."
        }
      },
      "required": [
        "type"
      ],
      "description": "The identity of the Batch pool, if configured. If the pool identity is updated during update an existing pool, only the new vms which are created after the pool shrinks to 0 will have the updated identities"
    },
    "CertificateCreateOrUpdateProperties": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string",
          "description": "The base64-encoded contents of the certificate. The maximum size is 10KB."
        },
        "format": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Pfx",
                "Cer"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The format of the certificate - either Pfx or Cer. If omitted, the default is Pfx."
        },
        "password": {
          "type": "string",
          "description": "The password to access the certificate's private key. This must not be specified if the certificate format is Cer."
        },
        "thumbprint": {
          "type": "string",
          "description": "The thumbprint of the certificate. This must match the thumbprint from the name."
        },
        "thumbprintAlgorithm": {
          "type": "string",
          "description": "The algorithm of the certificate thumbprint. This must match the first portion of the certificate name. Currently required to be 'SHA1'."
        }
      },
      "required": [
        "data"
      ],
      "description": "Certificate properties for create operations"
    },
    "CertificateReference": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The fully qualified ID of the certificate to install on the pool. This must be inside the same batch account as the pool."
        },
        "storeLocation": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "CurrentUser",
                "LocalMachine"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The location of the certificate store on the compute node into which to install the certificate. The default value is currentUser. This property is applicable only for pools configured with Windows nodes (that is, created with cloudServiceConfiguration, or with virtualMachineConfiguration using a Windows image reference). For Linux compute nodes, the certificates are stored in a directory inside the task working directory and an environment variable AZ_BATCH_CERTIFICATES_DIR is supplied to the task to query for this location. For certificates with visibility of 'remoteUser', a 'certs' directory is created in the user's home directory (e.g., /home/{user-name}/certs) and certificates are placed in that directory."
        },
        "storeName": {
          "type": "string",
          "description": "The name of the certificate store on the compute node into which to install the certificate. This property is applicable only for pools configured with Windows nodes (that is, created with cloudServiceConfiguration, or with virtualMachineConfiguration using a Windows image reference). Common store names include: My, Root, CA, Trust, Disallowed, TrustedPeople, TrustedPublisher, AuthRoot, AddressBook, but any custom store name can also be used. The default value is My."
        },
        "visibility": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "StartTask",
                  "Task",
                  "RemoteUser"
                ]
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Which user accounts on the compute node should have access to the private data of the certificate."
        }
      },
      "required": [
        "id"
      ],
      "description": "A reference to a certificate to be installed on compute nodes in a pool. This must exist inside the same account as the pool."
    },
    "CIFSMountConfiguration": {
      "type": "object",
      "properties": {
        "mountOptions": {
          "type": "string",
          "description": "Additional command line options to pass to the mount command. These are 'net use' options in Windows and 'mount' options in Linux."
        },
        "password": {
          "type": "string",
          "description": "The password to use for authentication against the CIFS file system."
        },
        "relativeMountPath": {
          "type": "string",
          "description": "The relative path on the compute node where the file system will be mounted. All file systems are mounted relative to the Batch mounts directory, accessible via the AZ_BATCH_NODE_MOUNTS_DIR environment variable."
        },
        "source": {
          "type": "string",
          "description": "The URI of the file system to mount."
        },
        "username": {
          "type": "string",
          "description": "The user to use for authentication against the CIFS file system."
        }
      },
      "required": [
        "password",
        "relativeMountPath",
        "source",
        "username"
      ],
      "description": "Information used to connect to a CIFS file system."
    },
    "CloudServiceConfiguration": {
      "type": "object",
      "properties": {
        "osFamily": {
          "type": "string",
          "description": "The Azure Guest OS family to be installed on the virtual machines in the pool. Possible values are: 2 - OS Family 2, equivalent to Windows Server 2008 R2 SP1. 3 - OS Family 3, equivalent to Windows Server 2012. 4 - OS Family 4, equivalent to Windows Server 2012 R2. 5 - OS Family 5, equivalent to Windows Server 2016. 6 - OS Family 6, equivalent to Windows Server 2019. For more information, see Azure Guest OS Releases (https://azure.microsoft.com/documentation/articles/cloud-services-guestos-update-matrix/#releases)."
        },
        "osVersion": {
          "type": "string",
          "description": "The Azure Guest OS version to be installed on the virtual machines in the pool. The default value is * which specifies the latest operating system version for the specified OS family."
        }
      },
      "required": [
        "osFamily"
      ],
      "description": "The configuration for nodes in a pool based on the Azure Cloud Services platform."
    },
    "ComputeNodeIdentityReference": {
      "type": "object",
      "properties": {
        "resourceId": {
          "type": "string",
          "description": "The ARM resource id of the user assigned identity."
        }
      },
      "description": "The reference to a user assigned identity associated with the Batch pool which a compute node will use."
    },
    "ContainerConfiguration": {
      "type": "object",
      "properties": {
        "containerImageNames": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The collection of container image names. This is the full image reference, as would be specified to \"docker pull\". An image will be sourced from the default Docker registry unless the image is fully qualified with an alternative registry."
        },
        "containerRegistries": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ContainerRegistry"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Additional private registries from which containers can be pulled. If any images must be downloaded from a private registry which requires credentials, then those credentials must be provided here."
        },
        "type": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "DockerCompatible"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The container technology to be used."
        }
      },
      "required": [
        "type"
      ],
      "description": "The configuration for container-enabled pools."
    },
    "ContainerRegistry": {
      "type": "object",
      "properties": {
        "identityReference": {
          "oneOf": [
            {
              "$ref": "#/definitions/ComputeNodeIdentityReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The reference to a user assigned identity associated with the Batch pool which a compute node will use."
        },
        "password": {
          "type": "string",
          "description": "The password to log into the registry server."
        },
        "registryServer": {
          "type": "string",
          "description": "The registry URL. If omitted, the default is \"docker.io\"."
        },
        "username": {
          "type": "string",
          "description": "The user name to log into the registry server."
        }
      },
      "description": "A private container registry."
    },
    "DataDisk": {
      "type": "object",
      "properties": {
        "caching": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "None",
                "ReadOnly",
                "ReadWrite"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The type of caching to be enabled for the data disks. Values are:\n\n none - The caching mode for the disk is not enabled.\n readOnly - The caching mode for the disk is read only.\n readWrite - The caching mode for the disk is read and write.\n\n The default value for caching is none. For information about the caching options see: https://blogs.msdn.microsoft.com/windowsazurestorage/2012/06/27/exploring-windows-azure-drives-disks-and-images/."
        },
        "diskSizeGB": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The initial disk size in GB when creating new data disk."
        },
        "lun": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The logical unit number. This is used to uniquely identify each data disk. If attaching multiple disks, each should have a distinct lun. The value must be between 0 and 63, inclusive."
        },
        "storageAccountType": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Standard_LRS",
                "Premium_LRS"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The storage account type to be used for the data disk. If omitted, the default is \"Standard_LRS\". Values are:\n\n Standard_LRS - The data disk should use standard locally redundant storage.\n Premium_LRS - The data disk should use premium locally redundant storage."
        }
      },
      "required": [
        "diskSizeGB",
        "lun"
      ],
      "description": "Settings which will be used by the data disks associated to Compute Nodes in the Pool. When using attached data disks, you need to mount and format the disks from within a VM to use them."
    },
    "DeploymentConfiguration": {
      "type": "object",
      "properties": {
        "cloudServiceConfiguration": {
          "oneOf": [
            {
              "$ref": "#/definitions/CloudServiceConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The configuration for nodes in a pool based on the Azure Cloud Services platform."
        },
        "virtualMachineConfiguration": {
          "oneOf": [
            {
              "$ref": "#/definitions/VirtualMachineConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The configuration for compute nodes in a pool based on the Azure Virtual Machines infrastructure."
        }
      },
      "description": "Deployment configuration properties."
    },
    "DiffDiskSettings": {
      "type": "object",
      "properties": {
        "placement": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "CacheDisk"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Specifies the ephemeral disk placement for operating system disk for all VMs in the pool. This property can be used by user in the request to choose which location the operating system should be in. e.g., cache disk space for Ephemeral OS disk provisioning. For more information on Ephemeral OS disk size requirements, please refer to Ephemeral OS disk size requirements for Windows VMs at https://docs.microsoft.com/en-us/azure/virtual-machines/windows/ephemeral-os-disks#size-requirements and Linux VMs at https://docs.microsoft.com/en-us/azure/virtual-machines/linux/ephemeral-os-disks#size-requirements."
        }
      },
      "description": "Specifies the ephemeral Disk Settings for the operating system disk used by the virtual machine."
    },
    "DiskEncryptionConfiguration": {
      "type": "object",
      "properties": {
        "targets": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "OsDisk",
                  "TemporaryDisk"
                ]
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The list of disk targets Batch Service will encrypt on the compute node. On Linux pool, only \"TemporaryDisk\" is supported; on Windows pool, \"OsDisk\" and \"TemporaryDisk\" must be specified."
        }
      },
      "description": "The disk encryption configuration applied on compute nodes in the pool. Disk encryption configuration is not supported on Linux pool created with Virtual Machine Image or Shared Image Gallery Image."
    },
    "EncryptionProperties": {
      "type": "object",
      "properties": {
        "keySource": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Microsoft.Batch",
                "Microsoft.KeyVault"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Type of the key source."
        },
        "keyVaultProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/KeyVaultProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "KeyVault configuration when using an encryption KeySource of Microsoft.KeyVault."
        }
      },
      "description": "Configures how customer data is encrypted inside the Batch account. By default, accounts are encrypted using a Microsoft managed key. For additional control, a customer-managed key can be used instead."
    },
    "EnvironmentSetting": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the environment variable."
        },
        "value": {
          "type": "string",
          "description": "The value of the environment variable."
        }
      },
      "required": [
        "name"
      ],
      "description": "An environment variable to be set on a task process."
    },
    "FixedScaleSettings": {
      "type": "object",
      "properties": {
        "nodeDeallocationOption": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Requeue",
                "Terminate",
                "TaskCompletion",
                "RetainedData"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Determines what to do with a node and its running task(s) if the pool size is decreasing. If omitted, the default value is Requeue."
        },
        "resizeTimeout": {
          "type": "string",
          "format": "duration",
          "description": "The timeout for allocation of compute nodes to the pool. The default value is 15 minutes. Timeout values use ISO 8601 format. For example, use PT10M for 10 minutes. The minimum value is 5 minutes. If you specify a value less than 5 minutes, the Batch service rejects the request with an error; if you are calling the REST API directly, the HTTP status code is 400 (Bad Request)."
        },
        "targetDedicatedNodes": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The desired number of dedicated compute nodes in the pool. At least one of targetDedicatedNodes, targetLowPriorityNodes must be set."
        },
        "targetLowPriorityNodes": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The desired number of low-priority compute nodes in the pool. At least one of targetDedicatedNodes, targetLowPriorityNodes must be set."
        }
      },
      "description": "Fixed scale settings for the pool."
    },
    "ImageReference": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ARM resource identifier of the Shared Image Gallery Image. Compute Nodes in the Pool will be created using this Image Id. This is of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Compute/galleries/{galleryName}/images/{imageDefinitionName}/versions/{versionId}. This property is mutually exclusive with other properties. The Shared Image Gallery image must have replicas in the same region as the Azure Batch account. For information about the firewall settings for the Batch node agent to communicate with the Batch service see https://docs.microsoft.com/en-us/azure/batch/batch-api-basics#virtual-network-vnet-and-firewall-configuration."
        },
        "offer": {
          "type": "string",
          "description": "The offer type of the Azure Virtual Machines Marketplace image. For example, UbuntuServer or WindowsServer."
        },
        "publisher": {
          "type": "string",
          "description": "The publisher of the Azure Virtual Machines Marketplace image. For example, Canonical or MicrosoftWindowsServer."
        },
        "sku": {
          "type": "string",
          "description": "The SKU of the Azure Virtual Machines Marketplace image. For example, 18.04-LTS or 2019-Datacenter."
        },
        "version": {
          "type": "string",
          "description": "The version of the Azure Virtual Machines Marketplace image. A value of 'latest' can be specified to select the latest version of an image. If omitted, the default is 'latest'."
        }
      },
      "description": "A reference to an Azure Virtual Machines Marketplace image or the Azure Image resource of a custom Virtual Machine. To get the list of all imageReferences verified by Azure Batch, see the 'List supported node agent SKUs' operation."
    },
    "InboundNatPool": {
      "type": "object",
      "properties": {
        "backendPort": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The port number on the compute node. This must be unique within a Batch pool. Acceptable values are between 1 and 65535 except for 22, 3389, 29876 and 29877 as these are reserved. If any reserved values are provided the request fails with HTTP status code 400."
        },
        "frontendPortRangeEnd": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The last port number in the range of external ports that will be used to provide inbound access to the backendPort on individual compute nodes. Acceptable values range between 1 and 65534 except ports from 50000 to 55000 which are reserved by the Batch service. All ranges within a pool must be distinct and cannot overlap. If any reserved or overlapping values are provided the request fails with HTTP status code 400."
        },
        "frontendPortRangeStart": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The first port number in the range of external ports that will be used to provide inbound access to the backendPort on individual compute nodes. Acceptable values range between 1 and 65534 except ports from 50000 to 55000 which are reserved. All ranges within a pool must be distinct and cannot overlap. If any reserved or overlapping values are provided the request fails with HTTP status code 400."
        },
        "name": {
          "type": "string",
          "description": "The name of the endpoint. The name must be unique within a Batch pool, can contain letters, numbers, underscores, periods, and hyphens. Names must start with a letter or number, must end with a letter, number, or underscore, and cannot exceed 77 characters.  If any invalid values are provided the request fails with HTTP status code 400."
        },
        "networkSecurityGroupRules": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/NetworkSecurityGroupRule"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "A list of network security group rules that will be applied to the endpoint. The maximum number of rules that can be specified across all the endpoints on a Batch pool is 25. If no network security group rules are specified, a default rule will be created to allow inbound access to the specified backendPort. If the maximum number of network security group rules is exceeded the request fails with HTTP status code 400."
        },
        "protocol": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "TCP",
                "UDP"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The protocol of the endpoint."
        }
      },
      "required": [
        "backendPort",
        "frontendPortRangeEnd",
        "frontendPortRangeStart",
        "name",
        "protocol"
      ],
      "description": "A inbound NAT pool that can be used to address specific ports on compute nodes in a Batch pool externally."
    },
    "KeyVaultProperties": {
      "type": "object",
      "properties": {
        "keyIdentifier": {
          "type": "string",
          "description": "Full path to the versioned secret. Example https://mykeyvault.vault.azure.net/keys/testkey/6e34a81fef704045975661e297a4c053. To be usable the following prerequisites must be met:\n\n The Batch Account has a System Assigned identity\n The account identity has been granted Key/Get, Key/Unwrap and Key/Wrap permissions\n The KeyVault has soft-delete and purge protection enabled"
        }
      },
      "description": "KeyVault configuration when using an encryption KeySource of Microsoft.KeyVault."
    },
    "KeyVaultReference": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The resource ID of the Azure key vault associated with the Batch account."
        },
        "url": {
          "type": "string",
          "description": "The URL of the Azure key vault associated with the Batch account."
        }
      },
      "required": [
        "id",
        "url"
      ],
      "description": "Identifies the Azure key vault associated with a Batch account."
    },
    "LinuxUserConfiguration": {
      "type": "object",
      "properties": {
        "gid": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The group ID for the user account. The uid and gid properties must be specified together or not at all. If not specified the underlying operating system picks the gid."
        },
        "sshPrivateKey": {
          "type": "string",
          "description": "The SSH private key for the user account. The private key must not be password protected. The private key is used to automatically configure asymmetric-key based authentication for SSH between nodes in a Linux pool when the pool's enableInterNodeCommunication property is true (it is ignored if enableInterNodeCommunication is false). It does this by placing the key pair into the user's .ssh directory. If not specified, password-less SSH is not configured between nodes (no modification of the user's .ssh directory is done)."
        },
        "uid": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The user ID of the user account. The uid and gid properties must be specified together or not at all. If not specified the underlying operating system picks the uid."
        }
      },
      "description": "Properties used to create a user account on a Linux node."
    },
    "MetadataItem": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the metadata item."
        },
        "value": {
          "type": "string",
          "description": "The value of the metadata item."
        }
      },
      "required": [
        "name",
        "value"
      ],
      "description": "A name-value pair associated with a Batch service resource. The Batch service does not assign any meaning to this metadata; it is solely for the use of user code."
    },
    "MountConfiguration": {
      "type": "object",
      "properties": {
        "azureBlobFileSystemConfiguration": {
          "oneOf": [
            {
              "$ref": "#/definitions/AzureBlobFileSystemConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Information used to connect to an Azure Storage Container using Blobfuse."
        },
        "azureFileShareConfiguration": {
          "oneOf": [
            {
              "$ref": "#/definitions/AzureFileShareConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Information used to connect to an Azure Fileshare."
        },
        "cifsMountConfiguration": {
          "oneOf": [
            {
              "$ref": "#/definitions/CIFSMountConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Information used to connect to a CIFS file system."
        },
        "nfsMountConfiguration": {
          "oneOf": [
            {
              "$ref": "#/definitions/NFSMountConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Information used to connect to an NFS file system."
        }
      },
      "description": "The file system to mount on each node."
    },
    "NetworkConfiguration": {
      "type": "object",
      "properties": {
        "endpointConfiguration": {
          "oneOf": [
            {
              "$ref": "#/definitions/PoolEndpointConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The endpoint configuration for a pool."
        },
        "publicIPAddressConfiguration": {
          "oneOf": [
            {
              "$ref": "#/definitions/PublicIPAddressConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The public IP Address configuration of the networking configuration of a Pool."
        },
        "subnetId": {
          "type": "string",
          "description": "The ARM resource identifier of the virtual network subnet which the compute nodes of the pool will join. This is of the form /subscriptions/{subscription}/resourceGroups/{group}/providers/{provider}/virtualNetworks/{network}/subnets/{subnet}. The virtual network must be in the same region and subscription as the Azure Batch account. The specified subnet should have enough free IP addresses to accommodate the number of nodes in the pool. If the subnet doesn't have enough free IP addresses, the pool will partially allocate compute nodes and a resize error will occur. The 'MicrosoftAzureBatch' service principal must have the 'Classic Virtual Machine Contributor' Role-Based Access Control (RBAC) role for the specified VNet. The specified subnet must allow communication from the Azure Batch service to be able to schedule tasks on the compute nodes. This can be verified by checking if the specified VNet has any associated Network Security Groups (NSG). If communication to the compute nodes in the specified subnet is denied by an NSG, then the Batch service will set the state of the compute nodes to unusable. If the specified VNet has any associated Network Security Groups (NSG), then a few reserved system ports must be enabled for inbound communication. For pools created with a virtual machine configuration, enable ports 29876 and 29877, as well as port 22 for Linux and port 3389 for Windows. For pools created with a cloud service configuration, enable ports 10100, 20100, and 30100. Also enable outbound connections to Azure Storage on port 443. For cloudServiceConfiguration pools, only 'classic' VNETs are supported. For more details see: https://docs.microsoft.com/en-us/azure/batch/batch-api-basics#virtual-network-vnet-and-firewall-configuration"
        }
      },
      "description": "The network configuration for a pool."
    },
    "NetworkSecurityGroupRule": {
      "type": "object",
      "properties": {
        "access": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Allow",
                "Deny"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The action that should be taken for a specified IP address, subnet range or tag."
        },
        "priority": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The priority for this rule. Priorities within a pool must be unique and are evaluated in order of priority. The lower the number the higher the priority. For example, rules could be specified with order numbers of 150, 250, and 350. The rule with the order number of 150 takes precedence over the rule that has an order of 250. Allowed priorities are 150 to 4096. If any reserved or duplicate values are provided the request fails with HTTP status code 400."
        },
        "sourceAddressPrefix": {
          "type": "string",
          "description": "The source address prefix or tag to match for the rule. Valid values are a single IP address (i.e. 10.10.10.10), IP subnet (i.e. 192.168.1.0/24), default tag, or * (for all addresses).  If any other values are provided the request fails with HTTP status code 400."
        },
        "sourcePortRanges": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The source port ranges to match for the rule. Valid values are '*' (for all ports 0 - 65535) or arrays of ports or port ranges (i.e. 100-200). The ports should in the range of 0 to 65535 and the port ranges or ports can't overlap. If any other values are provided the request fails with HTTP status code 400. Default value will be *."
        }
      },
      "required": [
        "access",
        "priority",
        "sourceAddressPrefix"
      ],
      "description": "A network security group rule to apply to an inbound endpoint."
    },
    "NFSMountConfiguration": {
      "type": "object",
      "properties": {
        "mountOptions": {
          "type": "string",
          "description": "Additional command line options to pass to the mount command. These are 'net use' options in Windows and 'mount' options in Linux."
        },
        "relativeMountPath": {
          "type": "string",
          "description": "The relative path on the compute node where the file system will be mounted. All file systems are mounted relative to the Batch mounts directory, accessible via the AZ_BATCH_NODE_MOUNTS_DIR environment variable."
        },
        "source": {
          "type": "string",
          "description": "The URI of the file system to mount."
        }
      },
      "required": [
        "relativeMountPath",
        "source"
      ],
      "description": "Information used to connect to an NFS file system."
    },
    "NodePlacementConfiguration": {
      "type": "object",
      "properties": {
        "policy": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Regional",
                "Zonal"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The node placement policy used to provision nodes. If not specified, Batch will use the regional policy."
        }
      },
      "description": "Node placement configuration for batch pools. Allocation configuration used by Batch Service to provision the nodes."
    },
    "OSDisk": {
      "type": "object",
      "properties": {
        "ephemeralOSDiskSettings": {
          "oneOf": [
            {
              "$ref": "#/definitions/DiffDiskSettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Specifies the ephemeral Disk Settings for the operating system disk used by the virtual machine."
        }
      },
      "description": "Settings for the operating system disk of the virtual machine."
    },
    "PoolEndpointConfiguration": {
      "type": "object",
      "properties": {
        "inboundNatPools": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/InboundNatPool"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "A list of inbound NAT pools that can be used to address specific ports on an individual compute node externally. The maximum number of inbound NAT pools per Batch pool is 5. If the maximum number of inbound NAT pools is exceeded the request fails with HTTP status code 400. This cannot be specified if the IPAddressProvisioningType is NoPublicIPAddresses."
        }
      },
      "required": [
        "inboundNatPools"
      ],
      "description": "The endpoint configuration for a pool."
    },
    "PoolProperties": {
      "type": "object",
      "properties": {
        "applicationLicenses": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The list of application licenses the Batch service will make available on each compute node in the pool. This list must be a subset of available Batch service application licenses. If a license is requested which is not supported, pool creation will fail."
        },
        "applicationPackages": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ApplicationPackageReference"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The list of application packages to be installed on each compute node in the pool. Changes to application package references affect all new compute nodes joining the pool, but do not affect compute nodes that are already in the pool until they are rebooted or reimaged. There is a maximum of 10 application package references on any given pool."
        },
        "certificates": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CertificateReference"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The list of certificates to be installed on each compute node in the pool. For Windows compute nodes, the Batch service installs the certificates to the specified certificate store and location. For Linux compute nodes, the certificates are stored in a directory inside the task working directory and an environment variable AZ_BATCH_CERTIFICATES_DIR is supplied to the task to query for this location. For certificates with visibility of 'remoteUser', a 'certs' directory is created in the user's home directory (e.g., /home/{user-name}/certs) and certificates are placed in that directory."
        },
        "deploymentConfiguration": {
          "oneOf": [
            {
              "$ref": "#/definitions/DeploymentConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Deployment configuration properties."
        },
        "displayName": {
          "type": "string",
          "description": "The display name for the pool. This name need not be unique and can contain any Unicode characters up to a maximum length of 1024."
        },
        "interNodeCommunication": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Enabled",
                "Disabled"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Whether the pool permits direct communication between nodes. This imposes restrictions on which nodes can be assigned to the pool. Enabling this value can reduce the chance of the requested number of nodes to be allocated in the pool. If not specified, this value defaults to 'Disabled'."
        },
        "metadata": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MetadataItem"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "A list of name-value pairs associated with the pool as metadata. The Batch service does not assign any meaning to metadata; it is solely for the use of user code."
        },
        "mountConfiguration": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MountConfiguration"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "A list of file systems to mount on each node in the pool. This supports Azure Files, NFS, CIFS/SMB, and Blobfuse."
        },
        "networkConfiguration": {
          "oneOf": [
            {
              "$ref": "#/definitions/NetworkConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The network configuration for a pool."
        },
        "scaleSettings": {
          "oneOf": [
            {
              "$ref": "#/definitions/ScaleSettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Scale settings for the pool. Defines the desired size of the pool. This can either be 'fixedScale' where the requested targetDedicatedNodes is specified, or 'autoScale' which defines a formula which is periodically reevaluated. If this property is not specified, the pool will have a fixed scale with 0 targetDedicatedNodes."
        },
        "startTask": {
          "oneOf": [
            {
              "$ref": "#/definitions/StartTask"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "A task which is run when a compute node joins a pool in the Azure Batch service, or when the compute node is rebooted or reimaged. In some cases the start task may be re-run even though the node was not rebooted. Due to this, start tasks should be idempotent and exit gracefully if the setup they're performing has already been done. Special care should be taken to avoid start tasks which create breakaway process or install/launch services from the start task working directory, as this will block Batch from being able to re-run the start task."
        },
        "taskSchedulingPolicy": {
          "oneOf": [
            {
              "$ref": "#/definitions/TaskSchedulingPolicy"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Specifies how tasks should be distributed across compute nodes."
        },
        "taskSlotsPerNode": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The number of task slots that can be used to run concurrent tasks on a single compute node in the pool. The default value is 1. The maximum value is the smaller of 4 times the number of cores of the vmSize of the pool or 256."
        },
        "userAccounts": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/UserAccount"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The list of user accounts to be created on each node in the pool."
        },
        "vmSize": {
          "type": "string",
          "description": "The size of virtual machines in the pool. All VMs in a pool are the same size. For information about available sizes of virtual machines for Cloud Services pools (pools created with cloudServiceConfiguration), see Sizes for Cloud Services (https://azure.microsoft.com/documentation/articles/cloud-services-sizes-specs/). Batch supports all Cloud Services VM sizes except ExtraSmall. For information about available VM sizes for pools using images from the Virtual Machines Marketplace (pools created with virtualMachineConfiguration) see Sizes for Virtual Machines (Linux) (https://azure.microsoft.com/documentation/articles/virtual-machines-linux-sizes/) or Sizes for Virtual Machines (Windows) (https://azure.microsoft.com/documentation/articles/virtual-machines-windows-sizes/). Batch supports all Azure VM sizes except STANDARD_A0 and those with premium storage (STANDARD_GS, STANDARD_DS, and STANDARD_DSV2 series)."
        }
      },
      "description": "Pool properties."
    },
    "PublicIPAddressConfiguration": {
      "type": "object",
      "properties": {
        "ipAddressIds": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The list of public IPs which the Batch service will use when provisioning Compute Nodes. The number of IPs specified here limits the maximum size of the Pool - 100 dedicated nodes or 100 low-priority nodes can be allocated for each public IP. For example, a pool needing 250 dedicated VMs would need at least 3 public IPs specified. Each element of this collection is of the form: /subscriptions/{subscription}/resourceGroups/{group}/providers/Microsoft.Network/publicIPAddresses/{ip}."
        },
        "provision": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "BatchManaged",
                "UserManaged",
                "NoPublicIPAddresses"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The provisioning type for Public IP Addresses for the pool. The default value is BatchManaged."
        }
      },
      "description": "The public IP Address configuration of the networking configuration of a Pool."
    },
    "ResourceFile": {
      "type": "object",
      "properties": {
        "autoStorageContainerName": {
          "type": "string",
          "description": "The storage container name in the auto storage account. The autoStorageContainerName, storageContainerUrl and httpUrl properties are mutually exclusive and one of them must be specified."
        },
        "blobPrefix": {
          "type": "string",
          "description": "The blob prefix to use when downloading blobs from an Azure Storage container. Only the blobs whose names begin with the specified prefix will be downloaded. Valid only when autoStorageContainerName or storageContainerUrl is used. This prefix can be a partial filename or a subdirectory. If a prefix is not specified, all the files in the container will be downloaded."
        },
        "fileMode": {
          "type": "string",
          "description": "The file permission mode attribute in octal format. This property applies only to files being downloaded to Linux compute nodes. It will be ignored if it is specified for a resourceFile which will be downloaded to a Windows node. If this property is not specified for a Linux node, then a default value of 0770 is applied to the file."
        },
        "filePath": {
          "type": "string",
          "description": "The location on the compute node to which to download the file, relative to the task's working directory. If the httpUrl property is specified, the filePath is required and describes the path which the file will be downloaded to, including the filename. Otherwise, if the autoStorageContainerName or storageContainerUrl property is specified, filePath is optional and is the directory to download the files to. In the case where filePath is used as a directory, any directory structure already associated with the input data will be retained in full and appended to the specified filePath directory. The specified relative path cannot break out of the task's working directory (for example by using '..')."
        },
        "httpUrl": {
          "type": "string",
          "description": "The URL of the file to download. The autoStorageContainerName, storageContainerUrl and httpUrl properties are mutually exclusive and one of them must be specified. If the URL points to Azure Blob Storage, it must be readable from compute nodes. There are three ways to get such a URL for a blob in Azure storage: include a Shared Access Signature (SAS) granting read permissions on the blob, use a managed identity with read permission, or set the ACL for the blob or its container to allow public access."
        },
        "identityReference": {
          "oneOf": [
            {
              "$ref": "#/definitions/ComputeNodeIdentityReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The reference to a user assigned identity associated with the Batch pool which a compute node will use."
        },
        "storageContainerUrl": {
          "type": "string",
          "description": "The URL of the blob container within Azure Blob Storage. The autoStorageContainerName, storageContainerUrl and httpUrl properties are mutually exclusive and one of them must be specified. This URL must be readable and listable from compute nodes. There are three ways to get such a URL for a container in Azure storage: include a Shared Access Signature (SAS) granting read and list permissions on the container, use a managed identity with read and list permissions, or set the ACL for the container to allow public access."
        }
      },
      "description": "A single file or multiple files to be downloaded to a compute node."
    },
    "ScaleSettings": {
      "type": "object",
      "properties": {
        "autoScale": {
          "oneOf": [
            {
              "$ref": "#/definitions/AutoScaleSettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "AutoScale settings for the pool."
        },
        "fixedScale": {
          "oneOf": [
            {
              "$ref": "#/definitions/FixedScaleSettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Fixed scale settings for the pool."
        }
      },
      "description": "Scale settings for the pool. Defines the desired size of the pool. This can either be 'fixedScale' where the requested targetDedicatedNodes is specified, or 'autoScale' which defines a formula which is periodically reevaluated. If this property is not specified, the pool will have a fixed scale with 0 targetDedicatedNodes."
    },
    "StartTask": {
      "type": "object",
      "properties": {
        "commandLine": {
          "type": "string",
          "description": "The command line of the start task. The command line does not run under a shell, and therefore cannot take advantage of shell features such as environment variable expansion. If you want to take advantage of such features, you should invoke the shell in the command line, for example using \"cmd /c MyCommand\" in Windows or \"/bin/sh -c MyCommand\" in Linux. Required if any other properties of the startTask are specified."
        },
        "containerSettings": {
          "oneOf": [
            {
              "$ref": "#/definitions/TaskContainerSettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The container settings for a task."
        },
        "environmentSettings": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/EnvironmentSetting"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "A list of environment variable settings for the start task."
        },
        "maxTaskRetryCount": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The maximum number of times the task may be retried. The Batch service retries a task if its exit code is nonzero. Note that this value specifically controls the number of retries. The Batch service will try the task once, and may then retry up to this limit. For example, if the maximum retry count is 3, Batch tries the task up to 4 times (one initial try and 3 retries). If the maximum retry count is 0, the Batch service does not retry the task. If the maximum retry count is -1, the Batch service retries the task without limit."
        },
        "resourceFiles": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ResourceFile"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "A list of files that the Batch service will download to the compute node before running the command line."
        },
        "userIdentity": {
          "oneOf": [
            {
              "$ref": "#/definitions/UserIdentity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The definition of the user identity under which the task is run. Specify either the userName or autoUser property, but not both."
        },
        "waitForSuccess": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Whether the Batch service should wait for the start task to complete successfully (that is, to exit with exit code 0) before scheduling any tasks on the compute node. If true and the start task fails on a compute node, the Batch service retries the start task up to its maximum retry count (maxTaskRetryCount). If the task has still not completed successfully after all retries, then the Batch service marks the compute node unusable, and will not schedule tasks to it. This condition can be detected via the node state and scheduling error detail. If false, the Batch service will not wait for the start task to complete. In this case, other tasks can start executing on the compute node while the start task is still running; and even if the start task fails, new tasks will continue to be scheduled on the node. The default is true."
        }
      },
      "description": "A task which is run when a compute node joins a pool in the Azure Batch service, or when the compute node is rebooted or reimaged. In some cases the start task may be re-run even though the node was not rebooted. Due to this, start tasks should be idempotent and exit gracefully if the setup they're performing has already been done. Special care should be taken to avoid start tasks which create breakaway process or install/launch services from the start task working directory, as this will block Batch from being able to re-run the start task."
    },
    "TaskContainerSettings": {
      "type": "object",
      "properties": {
        "containerRunOptions": {
          "type": "string",
          "description": "Additional options to the container create command. These options are supplied as arguments to the \"docker create\" command, in addition to those controlled by the Batch Service."
        },
        "imageName": {
          "type": "string",
          "description": "The image to use to create the container in which the task will run. This is the full image reference, as would be specified to \"docker pull\". If no tag is provided as part of the image name, the tag \":latest\" is used as a default."
        },
        "registry": {
          "oneOf": [
            {
              "$ref": "#/definitions/ContainerRegistry"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "A private container registry."
        },
        "workingDirectory": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "TaskWorkingDirectory",
                "ContainerImageDefault"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "A flag to indicate where the container task working directory is. The default is 'taskWorkingDirectory'."
        }
      },
      "required": [
        "imageName"
      ],
      "description": "The container settings for a task."
    },
    "TaskSchedulingPolicy": {
      "type": "object",
      "properties": {
        "nodeFillType": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Spread",
                "Pack"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "How tasks should be distributed across compute nodes."
        }
      },
      "required": [
        "nodeFillType"
      ],
      "description": "Specifies how tasks should be distributed across compute nodes."
    },
    "UserAccount": {
      "type": "object",
      "properties": {
        "elevationLevel": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "NonAdmin",
                "Admin"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The elevation level of the user account. nonAdmin - The auto user is a standard user without elevated access. admin - The auto user is a user with elevated access and operates with full Administrator permissions. The default value is nonAdmin."
        },
        "linuxUserConfiguration": {
          "oneOf": [
            {
              "$ref": "#/definitions/LinuxUserConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Properties used to create a user account on a Linux node."
        },
        "name": {
          "type": "string",
          "description": "The name of the user account."
        },
        "password": {
          "type": "string",
          "description": "The password for the user account."
        },
        "windowsUserConfiguration": {
          "oneOf": [
            {
              "$ref": "#/definitions/WindowsUserConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Properties used to create a user account on a Windows node."
        }
      },
      "required": [
        "name",
        "password"
      ],
      "description": "Properties used to create a user on an Azure Batch node."
    },
    "UserAssignedIdentities": {
      "type": "object",
      "properties": {},
      "description": "The list of associated user identities."
    },
    "UserIdentity": {
      "type": "object",
      "properties": {
        "autoUser": {
          "oneOf": [
            {
              "$ref": "#/definitions/AutoUserSpecification"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Specifies the parameters for the auto user that runs a task on the Batch service."
        },
        "userName": {
          "type": "string",
          "description": "The name of the user identity under which the task is run. The userName and autoUser properties are mutually exclusive; you must specify one but not both."
        }
      },
      "description": "The definition of the user identity under which the task is run. Specify either the userName or autoUser property, but not both."
    },
    "VirtualMachineConfiguration": {
      "type": "object",
      "properties": {
        "containerConfiguration": {
          "oneOf": [
            {
              "$ref": "#/definitions/ContainerConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The configuration for container-enabled pools."
        },
        "dataDisks": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DataDisk"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The configuration for data disks attached to the compute nodes in the pool. This property must be specified if the compute nodes in the pool need to have empty data disks attached to them."
        },
        "diskEncryptionConfiguration": {
          "oneOf": [
            {
              "$ref": "#/definitions/DiskEncryptionConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The disk encryption configuration applied on compute nodes in the pool. Disk encryption configuration is not supported on Linux pool created with Virtual Machine Image or Shared Image Gallery Image."
        },
        "extensions": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/VMExtension"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The virtual machine extension for the pool. If specified, the extensions mentioned in this configuration will be installed on each node."
        },
        "imageReference": {
          "oneOf": [
            {
              "$ref": "#/definitions/ImageReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "A reference to an Azure Virtual Machines Marketplace image or the Azure Image resource of a custom Virtual Machine. To get the list of all imageReferences verified by Azure Batch, see the 'List supported node agent SKUs' operation."
        },
        "licenseType": {
          "type": "string",
          "description": "The type of on-premises license to be used when deploying the operating system. This only applies to images that contain the Windows operating system, and should only be used when you hold valid on-premises licenses for the nodes which will be deployed. If omitted, no on-premises licensing discount is applied. Values are:\n\n Windows_Server - The on-premises license is for Windows Server.\n Windows_Client - The on-premises license is for Windows Client.\n"
        },
        "nodeAgentSkuId": {
          "type": "string",
          "description": "The SKU of the Batch node agent to be provisioned on compute nodes in the pool. The Batch node agent is a program that runs on each node in the pool, and provides the command-and-control interface between the node and the Batch service. There are different implementations of the node agent, known as SKUs, for different operating systems. You must specify a node agent SKU which matches the selected image reference. To get the list of supported node agent SKUs along with their list of verified image references, see the 'List supported node agent SKUs' operation."
        },
        "nodePlacementConfiguration": {
          "oneOf": [
            {
              "$ref": "#/definitions/NodePlacementConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Node placement configuration for batch pools. Allocation configuration used by Batch Service to provision the nodes."
        },
        "osDisk": {
          "oneOf": [
            {
              "$ref": "#/definitions/OSDisk"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Settings for the operating system disk of the virtual machine."
        },
        "windowsConfiguration": {
          "oneOf": [
            {
              "$ref": "#/definitions/WindowsConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Windows operating system settings to apply to the virtual machine."
        }
      },
      "required": [
        "imageReference",
        "nodeAgentSkuId"
      ],
      "description": "The configuration for compute nodes in a pool based on the Azure Virtual Machines infrastructure."
    },
    "VMExtension": {
      "type": "object",
      "properties": {
        "autoUpgradeMinorVersion": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed, however, the extension will not upgrade minor versions unless redeployed, even with this property set to true."
        },
        "name": {
          "type": "string",
          "description": "The name of the virtual machine extension."
        },
        "protectedSettings": {
          "type": "object",
          "properties": {},
          "description": "The extension can contain either protectedSettings or protectedSettingsFromKeyVault or no protected settings at all. "
        },
        "provisionAfterExtensions": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "A collection of extension names after which this extension needs to be provisioned."
        },
        "publisher": {
          "type": "string",
          "description": "The name of the extension handler publisher."
        },
        "settings": {
          "type": "object",
          "properties": {},
          "description": "JSON formatted public settings for the extension."
        },
        "type": {
          "type": "string",
          "description": "The type of the extensions."
        },
        "typeHandlerVersion": {
          "type": "string",
          "description": "The version of script handler."
        }
      },
      "required": [
        "name",
        "publisher",
        "type"
      ],
      "description": "The configuration for virtual machine extensions."
    },
    "WindowsConfiguration": {
      "type": "object",
      "properties": {
        "enableAutomaticUpdates": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Whether automatic updates are enabled on the virtual machine. If omitted, the default value is true."
        }
      },
      "description": "Windows operating system settings to apply to the virtual machine."
    },
    "WindowsUserConfiguration": {
      "type": "object",
      "properties": {
        "loginMode": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Batch",
                "Interactive"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The login mode for the user. The default value for VirtualMachineConfiguration pools is interactive mode and for CloudServiceConfiguration pools is batch mode."
        }
      },
      "description": "Properties used to create a user account on a Windows node."
    }
  }
}
{
  "id": "https://schema.management.azure.com/schemas/2020-08-21-preview/Microsoft.Resources.json#",
  "$schema": "http://json-schema.org/draft-04/schema#",
  "title": "Microsoft.Resources",
  "description": "Microsoft Resources Resource Types",
  "resourceDefinitions": {
    "deployments": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2020-08-21-preview"
          ]
        },
        "location": {
          "type": "string",
          "description": "The location to store the deployment data."
        },
        "name": {
          "oneOf": [
            {
              "type": "string",
              "pattern": "^[-\\w\\._\\(\\)]+$",
              "minLength": 1,
              "maxLength": 64
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The name of the deployment."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/DeploymentProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Deployment properties."
        },
        "tags": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Deployment tags"
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.Resources/deployments"
          ]
        },
        "subscriptionId": {
          "type": "string",
          "description": "The subscription to deploy to"
        },
        "resourceGroup": {
          "type": "string",
          "description": "The resource group to deploy to",
          "pattern": "^[-\\w\\._\\(\\)]+$",
          "maxLength": 90
        }
      },
      "required": [
        "apiVersion",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.Resources/deployments"
    },
    "deploymentScripts": {
      "type": "object",
      "oneOf": [
        {
          "$ref": "#/definitions/AzurePowerShellScript"
        },
        {
          "$ref": "#/definitions/AzureCliScript"
        }
      ],
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2020-08-21-preview"
          ]
        },
        "identity": {
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedServiceIdentity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Managed identity generic object."
        },
        "location": {
          "type": "string",
          "description": "The location of the ACI and the storage account for the deployment script."
        },
        "name": {
          "type": "string",
          "minLength": 1,
          "maxLength": 90,
          "description": "Name of the deployment script."
        },
        "tags": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Resource tags."
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.Resources/deploymentScripts"
          ]
        }
      },
      "required": [
        "apiVersion",
        "identity",
        "location",
        "name",
        "type"
      ],
      "description": "Microsoft.Resources/deploymentScripts"
    },
    "templateSpecs": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2020-08-21-preview"
          ]
        },
        "location": {
          "type": "string",
          "description": "The location of the Template Spec. It cannot be changed after Template Spec creation. It must be one of the supported Azure locations."
        },
        "name": {
          "oneOf": [
            {
              "type": "string",
              "pattern": "^[-\\w\\._\\(\\)]+$",
              "minLength": 1,
              "maxLength": 90
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Name of the Template Spec."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/TemplateSpecProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Template Spec properties."
        },
        "resources": {
          "type": "array",
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/templateSpecs_versions_childResource"
              }
            ]
          }
        },
        "tags": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Resource tags."
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.Resources/templateSpecs"
          ]
        }
      },
      "required": [
        "apiVersion",
        "location",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.Resources/templateSpecs"
    },
    "templateSpecs_versions": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2020-08-21-preview"
          ]
        },
        "location": {
          "type": "string",
          "description": "The location of the Template Spec Version. It must match the location of the parent Template Spec."
        },
        "name": {
          "oneOf": [
            {
              "type": "string",
              "pattern": "^[-\\w\\._\\(\\)]+$",
              "minLength": 1,
              "maxLength": 90
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The version of the Template Spec."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/TemplateSpecVersionProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Template Spec Version properties."
        },
        "tags": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Resource tags."
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.Resources/templateSpecs/versions"
          ]
        }
      },
      "required": [
        "apiVersion",
        "location",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.Resources/templateSpecs/versions"
    }
  },
  "subscription_resourceDefinitions": {
    "deployments": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2020-08-21-preview"
          ]
        },
        "location": {
          "type": "string",
          "description": "The location to store the deployment data."
        },
        "name": {
          "oneOf": [
            {
              "type": "string",
              "pattern": "^[-\\w\\._\\(\\)]+$",
              "minLength": 1,
              "maxLength": 64
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The name of the deployment."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/DeploymentProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Deployment properties."
        },
        "tags": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Deployment tags"
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.Resources/deployments"
          ]
        },
        "resourceGroup": {
          "type": "string",
          "description": "The resource group to deploy to",
          "pattern": "^[-\\w\\._\\(\\)]+$",
          "maxLength": 90
        }
      },
      "required": [
        "apiVersion",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.Resources/deployments"
    },
    "resourceGroups": {
      "type": "object",
      "properties": {
        "name": {
          "oneOf": [
            {
              "type": "string",
              "pattern": "^[-\\w\\._\\(\\)]+$",
              "maxLength": 90,
              "description": "the resource group name"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.Resources/resourceGroups"
          ]
        },
        "apiVersion": {
          "type": "string",
          "enum": [
            "2020-08-21-preview"
          ]
        },
        "location": {
          "type": "string",
          "description": "the resource group location"
        },
        "tags": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The resource group tags."
        }
      },
      "required": [
        "name",
        "type",
        "apiVersion",
        "location"
      ],
      "description": "Microsoft.Resources/resourceGroups"
    }
  },
  "managementGroup_resourceDefinitions": {
    "deployments": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2020-08-21-preview"
          ]
        },
        "location": {
          "type": "string",
          "description": "The location to store the deployment data."
        },
        "name": {
          "oneOf": [
            {
              "type": "string",
              "pattern": "^[-\\w\\._\\(\\)]+$",
              "minLength": 1,
              "maxLength": 64
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The name of the deployment."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/DeploymentProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Deployment properties."
        },
        "tags": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Deployment tags"
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.Resources/deployments"
          ]
        },
        "subscriptionId": {
          "type": "string",
          "description": "The subscription to deploy to"
        }
      },
      "required": [
        "apiVersion",
        "location",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.Resources/deployments"
    }
  },
  "tenant_resourceDefinitions": {
    "deployments": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2020-08-21-preview"
          ]
        },
        "location": {
          "type": "string",
          "description": "The location to store the deployment data."
        },
        "name": {
          "oneOf": [
            {
              "type": "string",
              "pattern": "^[-\\w\\._\\(\\)]+$",
              "minLength": 1,
              "maxLength": 64
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The name of the deployment."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/DeploymentProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Deployment properties."
        },
        "tags": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Deployment tags"
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.Resources/deployments"
          ]
        },
        "subscriptionId": {
          "type": "string",
          "description": "The subscription to deploy to"
        }
      },
      "required": [
        "apiVersion",
        "location",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.Resources/deployments"
    }
  },
  "unknown_resourceDefinitions": {
    "deployments": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2020-08-21-preview"
          ]
        },
        "location": {
          "type": "string",
          "description": "The location to store the deployment data."
        },
        "name": {
          "oneOf": [
            {
              "type": "string",
              "pattern": "^[-\\w\\._\\(\\)]+$",
              "minLength": 1,
              "maxLength": 64
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The name of the deployment."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/DeploymentProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Deployment properties."
        },
        "tags": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Deployment tags"
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.Resources/deployments"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.Resources/deployments"
    },
    "tags": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2020-08-21-preview"
          ]
        },
        "name": {
          "type": "string",
          "enum": [
            "default"
          ]
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/Tags"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "A dictionary of name and value pairs."
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.Resources/tags"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.Resources/tags"
    }
  },
  "definitions": {
    "AzureCliScript": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "enum": [
            "AzureCLI"
          ]
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/AzureCliScriptProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Properties of the Azure CLI script object."
        }
      },
      "required": [
        "kind",
        "properties"
      ],
      "description": "Object model for the Azure CLI script."
    },
    "AzureCliScriptProperties": {
      "type": "object",
      "properties": {
        "arguments": {
          "type": "string",
          "description": "Command line arguments to pass to the script. Arguments are separated by spaces. ex: -Name blue* -Location 'West US 2' "
        },
        "azCliVersion": {
          "type": "string",
          "description": "Azure CLI module version to be used."
        },
        "cleanupPreference": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Always",
                "OnSuccess",
                "OnExpiration"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The clean up preference when the script execution gets in a terminal state. Default setting is 'Always'."
        },
        "containerSettings": {
          "oneOf": [
            {
              "$ref": "#/definitions/ContainerConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Settings to customize ACI container instance."
        },
        "environmentVariables": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/EnvironmentVariable"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The environment variables to pass over to the script."
        },
        "forceUpdateTag": {
          "type": "string",
          "description": "Gets or sets how the deployment script should be forced to execute even if the script resource has not changed. Can be current time stamp or a GUID."
        },
        "primaryScriptUri": {
          "type": "string",
          "description": "Uri for the script. This is the entry point for the external script."
        },
        "retentionInterval": {
          "type": "string",
          "format": "duration",
          "description": "Interval for which the service retains the script resource after it reaches a terminal state. Resource will be deleted when this duration expires. Duration is based on ISO 8601 pattern (for example P7D means one week)."
        },
        "scriptContent": {
          "type": "string",
          "maxLength": 32000,
          "description": "Script body."
        },
        "storageAccountSettings": {
          "oneOf": [
            {
              "$ref": "#/definitions/StorageAccountConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Settings to use an existing storage account. Valid storage account kinds are: Storage, StorageV2 and FileStorage"
        },
        "supportingScriptUris": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Supporting files for the external script."
        },
        "timeout": {
          "type": "string",
          "format": "duration",
          "description": "Maximum allowed script execution time specified in ISO 8601 format. Default value is PT1H"
        }
      },
      "required": [
        "azCliVersion",
        "retentionInterval"
      ],
      "description": "Properties of the Azure CLI script object."
    },
    "AzurePowerShellScript": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "enum": [
            "AzurePowerShell"
          ]
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/AzurePowerShellScriptProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Properties of the Azure PowerShell script object."
        }
      },
      "required": [
        "kind",
        "properties"
      ],
      "description": "Object model for the Azure PowerShell script."
    },
    "AzurePowerShellScriptProperties": {
      "type": "object",
      "properties": {
        "arguments": {
          "type": "string",
          "description": "Command line arguments to pass to the script. Arguments are separated by spaces. ex: -Name blue* -Location 'West US 2' "
        },
        "azPowerShellVersion": {
          "type": "string",
          "description": "Azure PowerShell module version to be used."
        },
        "cleanupPreference": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Always",
                "OnSuccess",
                "OnExpiration"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The clean up preference when the script execution gets in a terminal state. Default setting is 'Always'."
        },
        "containerSettings": {
          "oneOf": [
            {
              "$ref": "#/definitions/ContainerConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Settings to customize ACI container instance."
        },
        "environmentVariables": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/EnvironmentVariable"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The environment variables to pass over to the script."
        },
        "forceUpdateTag": {
          "type": "string",
          "description": "Gets or sets how the deployment script should be forced to execute even if the script resource has not changed. Can be current time stamp or a GUID."
        },
        "primaryScriptUri": {
          "type": "string",
          "description": "Uri for the script. This is the entry point for the external script."
        },
        "retentionInterval": {
          "type": "string",
          "format": "duration",
          "description": "Interval for which the service retains the script resource after it reaches a terminal state. Resource will be deleted when this duration expires. Duration is based on ISO 8601 pattern (for example P7D means one week)."
        },
        "scriptContent": {
          "type": "string",
          "maxLength": 32000,
          "description": "Script body."
        },
        "storageAccountSettings": {
          "oneOf": [
            {
              "$ref": "#/definitions/StorageAccountConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Settings to use an existing storage account. Valid storage account kinds are: Storage, StorageV2 and FileStorage"
        },
        "supportingScriptUris": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Supporting files for the external script."
        },
        "timeout": {
          "type": "string",
          "format": "duration",
          "description": "Maximum allowed script execution time specified in ISO 8601 format. Default value is PT1H"
        }
      },
      "required": [
        "azPowerShellVersion",
        "retentionInterval"
      ],
      "description": "Properties of the Azure PowerShell script object."
    },
    "ContainerConfiguration": {
      "type": "object",
      "properties": {
        "containerGroupName": {
          "type": "string",
          "minLength": 1,
          "maxLength": 63,
          "description": "Container group name, if not specified then the name will get auto-generated. Not specifying a 'containerGroupName' indicates the system to generate a unique name which might end up flagging an Azure Policy as non-compliant. Use 'containerGroupName' when you have an Azure Policy that expects a specific naming convention or when you want to fully control the name. 'containerGroupName' property must be between 1 and 63 characters long, must contain only lowercase letters, numbers, and dashes and it cannot start or end with a dash and consecutive dashes are not allowed. To specify a 'containerGroupName', add the following object to properties: { \"containerSettings\": { \"containerGroupName\": \"contoso-container\" } }. If you do not want to specify a 'containerGroupName' then do not add 'containerSettings' property."
        }
      },
      "description": "Settings to customize ACI container instance."
    },
    "DebugSetting": {
      "type": "object",
      "properties": {
        "detailLevel": {
          "type": "string",
          "description": "Specifies the type of information to log for debugging. The permitted values are none, requestContent, responseContent, or both requestContent and responseContent separated by a comma. The default is none. When setting this value, carefully consider the type of information you are passing in during deployment. By logging information about the request or response, you could potentially expose sensitive data that is retrieved through the deployment operations."
        }
      },
      "description": "The debug setting."
    },
    "DebugSettingModel": {
      "type": "object",
      "properties": {
        "detailLevel": {
          "type": "string",
          "description": "The debug detail level."
        }
      }
    },
    "DeploymentProperties": {
      "type": "object",
      "properties": {
        "debugSetting": {
          "oneOf": [
            {
              "$ref": "#/definitions/DebugSetting"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The debug setting."
        },
        "mode": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Incremental",
                "Complete",
                "NotSpecified"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The mode that is used to deploy resources. This value can be either Incremental or Complete. In Incremental mode, resources are deployed without deleting existing resources that are not included in the template. In Complete mode, resources are deployed and existing resources in the resource group that are not included in the template are deleted. Be careful when using Complete mode as you may unintentionally delete resources."
        },
        "onErrorDeployment": {
          "oneOf": [
            {
              "$ref": "#/definitions/OnErrorDeployment"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Deployment on error behavior."
        },
        "parameters": {
          "type": "object",
          "properties": {},
          "description": "Name and value pairs that define the deployment parameters for the template. You use this element when you want to provide the parameter values directly in the request rather than link to an existing parameter file. Use either the parametersLink property or the parameters property, but not both. It can be a JObject or a well formed JSON string."
        },
        "parametersLink": {
          "oneOf": [
            {
              "$ref": "#/definitions/ParametersLink"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Entity representing the reference to the deployment parameters."
        },
        "template": {
          "type": "object",
          "properties": {},
          "description": "The template content. You use this element when you want to pass the template syntax directly in the request rather than link to an existing template. It can be a JObject or well-formed JSON string. Use either the templateLink property or the template property, but not both."
        },
        "templateLink": {
          "oneOf": [
            {
              "$ref": "#/definitions/TemplateLink"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Entity representing the reference to the template."
        }
      },
      "required": [
        "mode"
      ],
      "description": "Deployment properties."
    },
    "DeploymentPropertiesModel": {
      "type": "object",
      "properties": {
        "debugSetting": {
          "oneOf": [
            {
              "$ref": "#/definitions/DebugSetting"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The debug setting."
        },
        "mode": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Incremental",
                "Complete",
                "NotSpecified"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The mode that is used to deploy resources. This value can be either Incremental or Complete. In Incremental mode, resources are deployed without deleting existing resources that are not included in the template. In Complete mode, resources are deployed and existing resources in the resource group that are not included in the template are deleted. Be careful when using Complete mode as you may unintentionally delete resources."
        },
        "onErrorDeployment": {
          "oneOf": [
            {
              "$ref": "#/definitions/OnErrorDeployment"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Deployment on error behavior."
        },
        "parameters": {
          "type": "object",
          "properties": {},
          "description": "Name and value pairs that define the deployment parameters for the template. You use this element when you want to provide the parameter values directly in the request rather than link to an existing parameter file. Use either the parametersLink property or the parameters property, but not both. It can be a JObject or a well formed JSON string."
        },
        "parametersLink": {
          "oneOf": [
            {
              "$ref": "#/definitions/ParametersLink"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Entity representing the reference to the deployment parameters."
        },
        "template": {
          "type": "object",
          "properties": {},
          "description": "The template content. You use this element when you want to pass the template syntax directly in the request rather than link to an existing template. It can be a JObject or well-formed JSON string. Use either the templateLink property or the template property, but not both."
        },
        "templateLink": {
          "oneOf": [
            {
              "$ref": "#/definitions/TemplateLinkModel"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Entity representing the reference to the template."
        }
      },
      "required": [
        "mode"
      ],
      "description": "Deployment properties."
    },
    "DeploymentPropertiesModelModel": {
      "type": "object",
      "properties": {
        "debugSetting": {
          "oneOf": [
            {
              "$ref": "#/definitions/DebugSetting"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The debug setting."
        },
        "mode": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Incremental",
                "Complete",
                "NotSpecified"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The mode that is used to deploy resources. This value can be either Incremental or Complete. In Incremental mode, resources are deployed without deleting existing resources that are not included in the template. In Complete mode, resources are deployed and existing resources in the resource group that are not included in the template are deleted. Be careful when using Complete mode as you may unintentionally delete resources."
        },
        "parameters": {
          "type": "object",
          "properties": {},
          "description": "Name and value pairs that define the deployment parameters for the template. You use this element when you want to provide the parameter values directly in the request rather than link to an existing parameter file. Use either the parametersLink property or the parameters property, but not both. It can be a JObject or a well formed JSON string."
        },
        "parametersLink": {
          "oneOf": [
            {
              "$ref": "#/definitions/ParametersLink"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Entity representing the reference to the deployment parameters."
        },
        "template": {
          "type": "object",
          "properties": {},
          "description": "The template content. You use this element when you want to pass the template syntax directly in the request rather than link to an existing template. It can be a JObject or well-formed JSON string. Use either the templateLink property or the template property, but not both."
        },
        "templateLink": {
          "oneOf": [
            {
              "$ref": "#/definitions/TemplateLinkModel"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Entity representing the reference to the template."
        }
      },
      "required": [
        "mode"
      ],
      "description": "Deployment properties."
    },
    "DeploymentPropertiesModelModelModel": {
      "type": "object",
      "properties": {
        "debugSetting": {
          "oneOf": [
            {
              "$ref": "#/definitions/DebugSettingModel"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "mode": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Incremental",
                "Complete",
                "NotSpecified"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The deployment mode."
        },
        "parameters": {
          "type": "object",
          "properties": {},
          "description": "Name and value pairs that define the deployment parameters for the template. You use this element when you want to provide the parameter values directly in the request rather than link to an existing parameter file. Use either the parametersLink property or the parameters property, but not both. It can be a JObject or a well formed JSON string."
        },
        "parametersLink": {
          "oneOf": [
            {
              "$ref": "#/definitions/ParametersLink"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Entity representing the reference to the deployment parameters."
        },
        "template": {
          "type": "object",
          "properties": {},
          "description": "The template content. You use this element when you want to pass the template syntax directly in the request rather than link to an existing template. It can be a JObject or well-formed JSON string. Use either the templateLink property or the template property, but not both."
        },
        "templateLink": {
          "oneOf": [
            {
              "$ref": "#/definitions/TemplateLinkModel"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Entity representing the reference to the template."
        }
      },
      "required": [
        "mode"
      ],
      "description": "Deployment properties."
    },
    "DeploymentPropertiesModelModelModelModel": {
      "type": "object",
      "properties": {
        "mode": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Incremental",
                "Complete",
                "NotSpecified"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Gets or sets the deployment mode."
        },
        "parameters": {
          "type": "object",
          "properties": {},
          "description": "Name and value pairs that define the deployment parameters for the template. You use this element when you want to provide the parameter values directly in the request rather than link to an existing parameter file. Use either the parametersLink property or the parameters property, but not both. It can be a JObject or a well formed JSON string."
        },
        "parametersLink": {
          "oneOf": [
            {
              "$ref": "#/definitions/ParametersLink"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Entity representing the reference to the deployment parameters."
        },
        "template": {
          "type": "object",
          "properties": {},
          "description": "The template content. You use this element when you want to pass the template syntax directly in the request rather than link to an existing template. It can be a JObject or well-formed JSON string. Use either the templateLink property or the template property, but not both."
        },
        "templateLink": {
          "oneOf": [
            {
              "$ref": "#/definitions/TemplateLinkModel"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Entity representing the reference to the template."
        }
      },
      "description": "Deployment properties."
    },
    "EnvironmentVariable": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the environment variable."
        },
        "secureValue": {
          "type": "string",
          "description": "The value of the secure environment variable."
        },
        "value": {
          "type": "string",
          "description": "The value of the environment variable."
        }
      },
      "required": [
        "name"
      ],
      "description": "The environment variable to pass to the script in the container instance."
    },
    "ManagedServiceIdentity": {
      "type": "object",
      "properties": {
        "type": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "UserAssigned"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Type of the managed identity."
        },
        "userAssignedIdentities": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/UserAssignedIdentity"
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The list of user-assigned managed identities associated with the resource. Key is the Azure resource Id of the managed identity."
        }
      },
      "description": "Managed identity generic object."
    },
    "OnErrorDeployment": {
      "type": "object",
      "properties": {
        "deploymentName": {
          "type": "string",
          "description": "The deployment to be used on error case."
        },
        "type": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "LastSuccessful",
                "SpecificDeployment"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The deployment on error behavior type. Possible values are LastSuccessful and SpecificDeployment."
        }
      },
      "description": "Deployment on error behavior."
    },
    "ParametersLink": {
      "type": "object",
      "properties": {
        "contentVersion": {
          "type": "string",
          "description": "If included, must match the ContentVersion in the template."
        },
        "uri": {
          "type": "string",
          "description": "The URI of the parameters file."
        }
      },
      "required": [
        "uri"
      ],
      "description": "Entity representing the reference to the deployment parameters."
    },
    "StorageAccountConfiguration": {
      "type": "object",
      "properties": {
        "storageAccountKey": {
          "type": "string",
          "description": "The storage account access key."
        },
        "storageAccountName": {
          "type": "string",
          "description": "The storage account name."
        }
      },
      "description": "Settings to use an existing storage account. Valid storage account kinds are: Storage, StorageV2 and FileStorage"
    },
    "Tags": {
      "type": "object",
      "properties": {
        "tags": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "description": "A dictionary of name and value pairs."
    },
    "TemplateLink": {
      "type": "object",
      "properties": {
        "contentVersion": {
          "type": "string",
          "description": "If included, must match the ContentVersion in the template."
        },
        "id": {
          "type": "string",
          "description": "The resource id of a Template Spec. Use either the id or uri property, but not both."
        },
        "relativePath": {
          "type": "string",
          "description": "Applicable only if this template link references a Template Spec. This relativePath property can optionally be used to reference a Template Spec artifact by path."
        },
        "uri": {
          "type": "string",
          "description": "The URI of the template to deploy. Use either the uri or id property, but not both."
        }
      },
      "description": "Entity representing the reference to the template."
    },
    "TemplateLinkModel": {
      "type": "object",
      "properties": {
        "contentVersion": {
          "type": "string",
          "description": "If included, must match the ContentVersion in the template."
        },
        "uri": {
          "type": "string",
          "description": "The URI of the template to deploy. Use either the uri or id property, but not both."
        }
      },
      "required": [
        "uri"
      ],
      "description": "Entity representing the reference to the template."
    },
    "TemplateSpecArtifact": {
      "type": "object",
      "oneOf": [
        {
          "$ref": "#/definitions/TemplateSpecTemplateArtifact"
        }
      ],
      "properties": {
        "path": {
          "type": "string",
          "description": "A filesystem safe relative path of the artifact."
        }
      },
      "required": [
        "path"
      ],
      "description": "Represents a Template Spec artifact."
    },
    "TemplateSpecProperties": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "maxLength": 4096,
          "description": "Template Spec description."
        },
        "displayName": {
          "type": "string",
          "maxLength": 64,
          "description": "Template Spec display name."
        }
      },
      "description": "Template Spec properties."
    },
    "templateSpecs_versions_childResource": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2020-08-21-preview"
          ]
        },
        "location": {
          "type": "string",
          "description": "The location of the Template Spec Version. It must match the location of the parent Template Spec."
        },
        "name": {
          "oneOf": [
            {
              "type": "string",
              "pattern": "^[-\\w\\._\\(\\)]+$",
              "minLength": 1,
              "maxLength": 90
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The version of the Template Spec."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/TemplateSpecVersionProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Template Spec Version properties."
        },
        "tags": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Resource tags."
        },
        "type": {
          "type": "string",
          "enum": [
            "versions"
          ]
        }
      },
      "required": [
        "apiVersion",
        "location",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.Resources/templateSpecs/versions"
    },
    "TemplateSpecTemplateArtifact": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "enum": [
            "template"
          ]
        },
        "template": {
          "type": "object",
          "properties": {},
          "description": "The Azure Resource Manager template."
        }
      },
      "required": [
        "kind",
        "template"
      ],
      "description": "Represents a Template Spec artifact containing an embedded Azure Resource Manager template."
    },
    "TemplateSpecVersionProperties": {
      "type": "object",
      "properties": {
        "artifacts": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TemplateSpecArtifact"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "An array of Template Spec artifacts."
        },
        "description": {
          "type": "string",
          "maxLength": 4096,
          "description": "Template Spec version description."
        },
        "template": {
          "type": "object",
          "properties": {},
          "description": "The Azure Resource Manager template content."
        }
      },
      "description": "Template Spec Version properties."
    },
    "UserAssignedIdentity": {
      "type": "object",
      "properties": {
        "clientId": {
          "type": "string",
          "description": "Client App Id associated with this identity."
        },
        "principalId": {
          "type": "string",
          "description": "Azure Active Directory principal ID associated with this identity."
        }
      },
      "description": "User-assigned managed identity."
    }
  }
}
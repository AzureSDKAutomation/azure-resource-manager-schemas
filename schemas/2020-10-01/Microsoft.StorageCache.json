{
  "id": "https://schema.management.azure.com/schemas/2020-10-01/Microsoft.StorageCache.json#",
  "$schema": "http://json-schema.org/draft-04/schema#",
  "title": "Microsoft.StorageCache",
  "description": "Microsoft StorageCache Resource Types",
  "resourceDefinitions": {
    "caches": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2020-10-01"
          ]
        },
        "identity": {
          "oneOf": [
            {
              "$ref": "#/definitions/CacheIdentity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Cache identity properties."
        },
        "location": {
          "type": "string",
          "description": "Region name string."
        },
        "name": {
          "oneOf": [
            {
              "type": "string",
              "pattern": "^[-0-9a-zA-Z_]{1,80}$"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Name of Cache. Length of name must not be greater than 80 and chars must be from the [-0-9a-zA-Z_] char class."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/CacheProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Properties of the Cache."
        },
        "resources": {
          "type": "array",
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/caches_storageTargets_childResource"
              }
            ]
          }
        },
        "sku": {
          "oneOf": [
            {
              "$ref": "#/definitions/CacheSku"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "SKU for the Cache."
        },
        "tags": {
          "type": "object",
          "properties": {},
          "description": "ARM tags as name/value pairs."
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.StorageCache/caches"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.StorageCache/caches"
    },
    "caches_storageTargets": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2020-10-01"
          ]
        },
        "name": {
          "oneOf": [
            {
              "type": "string",
              "pattern": "^[-0-9a-zA-Z_]{1,80}$"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Name of the Storage Target. Length of name must not be greater than 80 and chars must be from the [-0-9a-zA-Z_] char class."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/StorageTargetProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Properties of the Storage Target."
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.StorageCache/caches/storageTargets"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.StorageCache/caches/storageTargets"
    }
  },
  "definitions": {
    "CacheActiveDirectorySettings": {
      "type": "object",
      "properties": {
        "credentials": {
          "oneOf": [
            {
              "$ref": "#/definitions/CacheActiveDirectorySettingsCredentials"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Active Directory admin or user credentials used to join the HPC Cache to a domain."
        },
        "domainName": {
          "type": "string",
          "description": "The fully qualified domain name of the Active Directory domain controller."
        },
        "domainNetBios": {
          "type": "string",
          "description": "The Active Directory domain's NetBIOS name."
        },
        "primaryDnsIpAddress": {
          "type": "string",
          "description": "Primary DNS IP address used to resolve the Active Directory domain controller's fully qualified domain name."
        },
        "secondaryDnsIpAddress": {
          "type": "string",
          "description": "Secondary DNS IP address used to resolve the Active Directory domain controller's fully qualified domain name."
        },
        "smbServerName": {
          "oneOf": [
            {
              "type": "string",
              "pattern": "^[-0-9a-zA-Z]{1,15}$"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The name (NetBIOS) used for the HPC Cache to join the Active Directory domain. Length must not be greater than 15 and chars must be from the [-0-9a-zA-Z_] char class."
        }
      },
      "required": [
        "domainName",
        "domainNetBios",
        "primaryDnsIpAddress",
        "smbServerName"
      ],
      "description": "Active Directory settings used to join a Cache to a domain."
    },
    "CacheActiveDirectorySettingsCredentials": {
      "type": "object",
      "properties": {
        "password": {
          "type": "string",
          "description": "Plain text password of the Active Directory domain administrator. This value is stored encrypted and not returned on response."
        },
        "username": {
          "type": "string",
          "description": "User name of the Active Directory domain administrator. This value is stored encrypted and not returned on response."
        }
      },
      "required": [
        "password",
        "username"
      ],
      "description": "Active Directory admin or user credentials used to join the HPC Cache to a domain."
    },
    "CacheDirectorySettings": {
      "type": "object",
      "properties": {
        "activeDirectory": {
          "oneOf": [
            {
              "$ref": "#/definitions/CacheActiveDirectorySettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Active Directory settings used to join a Cache to a domain."
        },
        "usernameDownload": {
          "oneOf": [
            {
              "$ref": "#/definitions/CacheUsernameDownloadSettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Settings for username and group download for Extended Groups."
        }
      },
      "description": "Cache Directory Services settings."
    },
    "CacheEncryptionSettings": {
      "type": "object",
      "properties": {
        "keyEncryptionKey": {
          "oneOf": [
            {
              "$ref": "#/definitions/KeyVaultKeyReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Describes a reference to Key Vault Key."
        }
      },
      "description": "Cache encryption settings."
    },
    "CacheIdentity": {
      "type": "object",
      "properties": {
        "type": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "SystemAssigned",
                "None"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The type of identity used for the cache."
        }
      },
      "description": "Cache identity properties."
    },
    "CacheNetworkSettings": {
      "type": "object",
      "properties": {
        "mtu": {
          "oneOf": [
            {
              "type": "integer",
              "minimum": 576,
              "maximum": 1500,
              "default": "1500"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The IPv4 maximum transmission unit configured for the subnet."
        }
      },
      "description": "Cache network settings."
    },
    "CacheProperties": {
      "type": "object",
      "properties": {
        "cacheSizeGB": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The size of this Cache, in GB."
        },
        "directoryServicesSettings": {
          "oneOf": [
            {
              "$ref": "#/definitions/CacheDirectorySettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Cache Directory Services settings."
        },
        "encryptionSettings": {
          "oneOf": [
            {
              "$ref": "#/definitions/CacheEncryptionSettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Cache encryption settings."
        },
        "networkSettings": {
          "oneOf": [
            {
              "$ref": "#/definitions/CacheNetworkSettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Cache network settings."
        },
        "provisioningState": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Cancelled",
                "Creating",
                "Deleting",
                "Updating"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "ARM provisioning state, see https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.md#provisioningstate-property."
        },
        "securitySettings": {
          "oneOf": [
            {
              "$ref": "#/definitions/CacheSecuritySettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Cache security settings."
        },
        "subnet": {
          "type": "string",
          "description": "A fully qualified URL."
        },
        "upgradeStatus": {
          "oneOf": [
            {
              "$ref": "#/definitions/CacheUpgradeStatus"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Properties describing the software upgrade state of the Cache."
        }
      },
      "description": "Properties of the Cache."
    },
    "CacheSecuritySettings": {
      "type": "object",
      "properties": {
        "accessPolicies": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/NfsAccessPolicy"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "NFS access policies defined for this cache."
        }
      },
      "description": "Cache security settings."
    },
    "CacheSku": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "SKU name for this Cache."
        }
      },
      "description": "SKU for the Cache."
    },
    "caches_storageTargets_childResource": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2020-10-01"
          ]
        },
        "name": {
          "oneOf": [
            {
              "type": "string",
              "pattern": "^[-0-9a-zA-Z_]{1,80}$"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Name of the Storage Target. Length of name must not be greater than 80 and chars must be from the [-0-9a-zA-Z_] char class."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/StorageTargetProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Properties of the Storage Target."
        },
        "type": {
          "type": "string",
          "enum": [
            "storageTargets"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.StorageCache/caches/storageTargets"
    },
    "CacheUpgradeStatus": {
      "type": "object",
      "properties": {},
      "description": "Properties describing the software upgrade state of the Cache."
    },
    "CacheUsernameDownloadSettings": {
      "type": "object",
      "properties": {
        "autoDownloadCertificate": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Determines if the certificate should be automatically downloaded. This applies to 'caCertificateURI' when 'requireValidCertificate' is true, or a self signed certificate otherwise."
        },
        "caCertificateURI": {
          "type": "string",
          "description": "The URI of the CA certificate to validate the LDAP secure connection. This field must be populated when 'requireValidCertificate' is set to true."
        },
        "credentials": {
          "oneOf": [
            {
              "$ref": "#/definitions/CacheUsernameDownloadSettingsCredentials"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "When present, these are the credentials for the secure LDAP connection."
        },
        "encryptLdapConnection": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "This indicates if the LDAP connection should be encrypted."
        },
        "extendedGroupsEnabled": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "This indicates if Extended Groups is enabled."
        },
        "groupFileURI": {
          "type": "string",
          "description": "The URI of the file containing the group information (in /etc/group file format).  This field must be populated when 'usernameSource' is set to 'File'."
        },
        "ldapBaseDn": {
          "type": "string",
          "description": "The base distinguished name for the LDAP domain."
        },
        "ldapServer": {
          "type": "string",
          "description": "The fully qualified domain name or IP address of the LDAP server to use."
        },
        "requireValidCertificate": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Determines if the certificates should be validated by a certificate authority. When true, caCertificateURI must be provided."
        },
        "userFileURI": {
          "type": "string",
          "description": "The URI of the file containing the user information (in /etc/passwd file format). This field must be populated when 'usernameSource' is set to 'File'."
        },
        "usernameSource": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "AD",
                "LDAP",
                "File",
                "None"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "This setting determines how the system gets username and group names for clients."
        }
      },
      "description": "Settings for username and group download for Extended Groups."
    },
    "CacheUsernameDownloadSettingsCredentials": {
      "type": "object",
      "properties": {
        "bindDn": {
          "type": "string",
          "description": "The Bind distinguished name identity to be used in the secure LDAP connection. This value is stored encrypted and not returned on response."
        },
        "bindPassword": {
          "type": "string",
          "description": "The Bind password to be used in the secure LDAP connection. This value is stored encrypted and not returned on response."
        }
      },
      "description": "When present, these are the credentials for the secure LDAP connection."
    },
    "ClfsTarget": {
      "type": "object",
      "properties": {
        "target": {
          "type": "string",
          "description": "A fully qualified URL."
        }
      },
      "description": "Properties pertaining to the ClfsTarget"
    },
    "KeyVaultKeyReference": {
      "type": "object",
      "properties": {
        "keyUrl": {
          "type": "string",
          "description": "The URL referencing a key encryption key in Key Vault."
        },
        "sourceVault": {
          "oneOf": [
            {
              "$ref": "#/definitions/KeyVaultKeyReferenceSourceVault"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Describes a resource Id to source Key Vault."
        }
      },
      "required": [
        "keyUrl",
        "sourceVault"
      ],
      "description": "Describes a reference to Key Vault Key."
    },
    "KeyVaultKeyReferenceSourceVault": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Resource Id."
        }
      },
      "description": "Describes a resource Id to source Key Vault."
    },
    "NamespaceJunction": {
      "type": "object",
      "properties": {
        "namespacePath": {
          "type": "string",
          "description": "Namespace path on a Cache for a Storage Target."
        },
        "nfsAccessPolicy": {
          "type": "string",
          "description": "Name of the access policy applied to this junction."
        },
        "nfsExport": {
          "type": "string",
          "description": "NFS export where targetPath exists."
        },
        "targetPath": {
          "type": "string",
          "description": "Path in Storage Target to which namespacePath points."
        }
      },
      "description": "A namespace junction."
    },
    "Nfs3Target": {
      "type": "object",
      "properties": {
        "target": {
          "oneOf": [
            {
              "type": "string",
              "pattern": "^[-.0-9a-zA-Z]+$"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "IP address or host name of an NFSv3 host (e.g., 10.0.44.44)."
        },
        "usageModel": {
          "type": "string",
          "description": "Identifies the usage model to be used for this Storage Target. Get choices from .../usageModels"
        }
      },
      "description": "Properties pertaining to the Nfs3Target"
    },
    "NfsAccessPolicy": {
      "type": "object",
      "properties": {
        "accessRules": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/NfsAccessRule"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The set of rules describing client accesses allowed under this policy."
        },
        "name": {
          "type": "string",
          "description": "Name identifying this policy. Access Policy names are not case sensitive."
        }
      },
      "description": "A set of rules describing access policies applied to NFSv3 clients of the cache."
    },
    "NfsAccessRule": {
      "type": "object",
      "properties": {
        "access": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "no",
                "ro",
                "rw"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Access allowed by this rule."
        },
        "anonymousGID": {
          "type": "string",
          "default": "-2",
          "description": "GID value that replaces 0 when rootSquash is true."
        },
        "anonymousUID": {
          "type": "string",
          "default": "-2",
          "description": "UID value that replaces 0 when rootSquash is true."
        },
        "filter": {
          "type": "string",
          "description": "Filter applied to this rule. The filter's format depends on its scope.  'default' scope is reserved for system use. 'network' is in CIDR format (e.g., 10.99.1.0/24) and 'host' is an IP address or fully qualified domain name."
        },
        "rootSquash": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Map root accesses to anonymousUID and anonymousGID."
        },
        "scope": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "default",
                "network",
                "host"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Scope applied to this rule."
        },
        "submountAccess": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Allow mounts below the junction."
        },
        "suid": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Allow SUID semantics."
        }
      },
      "description": "Rule to place restrictions on portions of the NFS namespace being presented to clients."
    },
    "StorageTargetProperties": {
      "type": "object",
      "properties": {
        "clfs": {
          "oneOf": [
            {
              "$ref": "#/definitions/ClfsTarget"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Properties pertaining to the ClfsTarget"
        },
        "junctions": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/NamespaceJunction"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "List of Cache namespace junctions to target for namespace associations."
        },
        "nfs3": {
          "oneOf": [
            {
              "$ref": "#/definitions/Nfs3Target"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Properties pertaining to the Nfs3Target"
        },
        "provisioningState": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Cancelled",
                "Creating",
                "Deleting",
                "Updating"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "ARM provisioning state, see https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.md#provisioningstate-property."
        },
        "targetType": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "nfs3",
                "clfs",
                "unknown"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Type of the Storage Target."
        },
        "unknown": {
          "oneOf": [
            {
              "$ref": "#/definitions/UnknownTarget"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Properties pertaining to the UnknownTarget"
        }
      },
      "required": [
        "targetType"
      ],
      "description": "Properties of the Storage Target."
    },
    "UnknownTarget": {
      "type": "object",
      "properties": {
        "unknownMap": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Properties of an unknown type of Storage Target."
        }
      },
      "description": "Properties pertaining to the UnknownTarget"
    }
  }
}